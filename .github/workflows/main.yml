name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  test-jest:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_HOST_AUTH_METHOD: trust

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "latest"

      - name: Install dependencies
        run: npm i

      - name: Prepare PostgreSQL
        run: |
          cd server/src/services/
          npm run db:push
          npm run db:generate
          cd ../

      - name: Run Jest tests
        run: npx jest
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}

    artifacts:
      paths:
        - server/src/tests/coverage/

  badges:
    runs-on: ubuntu-latest

    needs: test-jest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "latest"

      - name: Generate code quality badges
        run: server/src/tests/badges.sh

      - name: Generate coverage badges
        run: npx jest-coverage-badges

    when: always

    artifacts:
      paths:
        - server/src/tests/coverage/
        - server/src/tests/*.svg
