// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//TODO should we add a Group table? 
//TODO should the COD_* be a string? ex: a course code is usually a combination
// of letters and numbers
model Teacher {
  id             Int        @id @default(autoincrement())
  surname        String
  name           String
  email          String
  COD_GROUP      String
  COD_DEPARTMENT String
  Proposal       Proposal[]
}

model Degree {
  COD_DEGREE   String     @id
  TITLE_DEGREE String
  Student      Student[]
  Proposal     Proposal[]
}

//TODO This might be useless (irrelevant table)
model Courses {
  id           Int    @id @default(autoincrement())
  COD_COURSE   Int    @unique
  TITLE_COURSE String
}

model Career {
  id           Int
  COD_COURSE   String
  TITLE_COURSE String
  CFU          Int
  grade        Int
  date         Int
  student      Student @relation(fields: [id], references: [id])

  @@id([id, COD_COURSE])
}

model Student {
  id              Int           @id @default(autoincrement())
  surname         String
  name            String
  gender          String
  nationality     String
  email           String
  COD_DEGREE      String
  ENROLLMENT_YEAR Int
  applications    Application[]
  degree          Degree        @relation(fields: [COD_DEGREE], references: [COD_DEGREE])
  Career          Career[]
}

model Application {
  id          Int       @id @default(autoincrement())
  date        DateTime  @default(now())
  status      String
  comment     String?
  STUDENT_ID  Int
  PROPOSAL_ID Int?
  student     Student   @relation(fields: [STUDENT_ID], references: [id], onDelete: Cascade)
  proposal    Proposal? @relation(fields: [PROPOSAL_ID], references: [id], onDelete: SetNull)
}

model Proposal {
  id                Int           @id @default(autoincrement())
  title             String
  supervisor        Int
  coSupervisors     String?
  keywords          String[]
  applications      Application[]
  type              String
  groups            String[]
  description       String
  notes             String?
  expiration        DateTime
  level             String
  cds               String
  archived          Boolean       @default(false)
  teacher           Teacher       @relation(fields: [supervisor], references: [id])
  requiredKnowledge String
  degree            Degree        @relation(fields: [cds], references: [COD_DEGREE])
}
